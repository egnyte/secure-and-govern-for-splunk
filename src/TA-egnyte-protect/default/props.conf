[source::...ta-egnyte-protect*.log*]
sourcetype = ta:egnyte:protect:log

[source::...ta_egnyte_protect*.log*]
sourcetype = ta:egnyte:protect:log

[egnyte:protect:incidents]
# DATETIME_CONFIG = CURRENT
EVAL-source = mvindex(source,1)
# EVAL-body = type + ":" + mvindex(source,1) + ":" + 'item.displayName' + ":" + 'item.type' + ":" + updated + ":" + detected
# FIELDALIAS-src = source as src
# EVAL-subject = "Egnyte Secure & Govern issue:" + 'item.displayName'
# EVAL-egnyte_type = type
# EVAL-type = "alert"

# -----------------------------------------------------

KV_MODE = json
SHOULD_LINEMERGE = false

# TIME_PREFIX=\"detected\":\s+
TIMESTAMP_FIELDS = detected
TIME_FORMAT = %s%3N
TZ = UTC
MAX_TIMESTAMP_LOOKAHEAD = -1
# Fix-up time:
EVAL-timestamp = strptime(detected, "%s%3N")
EVAL-_time = strptime(detected, "%s%3N")
# --------------------------------------------------------------------------------------------
# CIM
# --------------------------------------------------------------------------------------------
# CIM - Malware: describe malware detection and endpoint protection management
# CIM - Alerts (IDS): attack detection events gathered by network monitoring devices and apps.
# DLP - Data Loss Prevention: DLP tools used to identify, monitor and protect data.
# --------------------------------------------------------------------------------------------


# [ ] ALERT     action - The action taken by the IDS (allowed, blocked)
# [ ] MALWARE   action - The action taken by the reporting device (allowed, blocked, deferred)
# [ ] DLP       action - The action taken by the DLP device.
EVAL-action = "deferred"
# TODO!!!
# violationDetails.unusualActivities{}.type

# [X] DLP       app - The application involved in the event.
EVAL-app = "Egnyte"

# [X] DLP       category - The category of the DLP event.
# [X] ALERT     category - The vendor-provided category of the triggered signature, such as spyware.
# [X] MALWARE   category - The category of the malware event, such as keylogger or ad-supported program
EVAL-category = replace(lower(type), "_", " ")
# EVAL-category = mvindex(split(lower(type), "_"),0)
# EVAL-category = lower('item.type')

# [X] MALWARE   date - The date of the malware event
EVAL-date = strftime(detected/1000,"%Y-%m-%d")

# [ ] DLP       dest - The target of the DLP event.
# [ ] ALERT     dest - The destination of the attack detected by the IDS (dest_host, dest_ip, dest_name)
# [ ] MALWARE   dest - The system that was affected by the malware event (dest_host, dest_ip, or dest_name)
FIELDALIAS-dest = case(\
    'item.type'=="FILE" OR 'item.type'=="FOLDER", 'item.displayName', \
    !isnull('violationDetails.topAffectedFiles{}.path'), 'violationDetails.topAffectedFiles{}.path', \
    !isnull('violationDetails.topAffectedFolders{}.path'), 'violationDetails.topAffectedFolders{}.path' \
)

FIELDALIAS-dest_path = violationDetails.topAffectedFolders{}.path ASNEW dest_path


# [ ] MALWARE   dest_host - The destination host, if applicable
EVAL-dest_host = mvindex(source,-1)
# [ ] MALWARE   dest_nt_domain - The NT domain of the destination, if applicable

# [ ] ALERT     dest_url - The destination url, which was accessed when the ALERT was triggered
FIELDALIAS-dest_url = violationDetails.publicLinks{}.link ASNEW dest_url

# [ ] DLP       dest_zone - The zone of the DLP target.
# [ ] DLP       dlp_type - The type of DLP system that generated the event.


# [ ] ALERT     dvc - The device that detected the intrusion event (dvc_host, dvc_ip, dvc_name)

# [ ] ALERT     dvc_host - The dvc_host that detected the intrusion event

# [ ] ALERT     file_hash - A cryptographic identifier assigned to the file object affected by the event.
# [ ] MALWARE   file_hash - The hash of the file with suspected malware

# [ ] ALERT     file_name - The name of the file, such as notepad.exe.

# [ ] ALERT     file_path - The path of the file, such as C:\\Windows\\System32\\notepad.exe.
FIELDALIAS-file_path = 'violationDetails.topAffectedFiles{}.path' ASNEW file_path
# [ ] MALWARE   file_name - The name of the file with suspected malware

# [ ] MALWARE   file_path - The full file path of the file with suspected malware

# [ ] ALERT     src - The source involved in the attack detected by the IDS. (src_host, src_ip, or src_name)
# [ ] MALWARE   src - The source of the event, such as a DAT file relay server (src_host, src_ip, or src_name)
EVAL-src = lower('violationDetails.externalUsers{}.email')
EVAL-src_user_email = lower('violationDetails.externalUsers{}.email')
EVAL-src_user_name = lower('violationDetails.externalUsers{}.displayName')
EVAL-src_user_alias = lower('violationDetails.externalUsers{}.username')
EVAL-src_user_domain = mvindex(split(lower('violationDetails.externalUsers{}.email'),"@"),-1)

# [ ] MALWARE   src_url - The source_url of the malware

# [ ] ALERT     ids_type - The type of IDS that generated the event. (network, host, application, wireless)
EVAL-ids_type = "application"

# [ ] DLP       object - The name of the affected object.
EVAL-object = case(\
    'item.type'=="FILE" OR 'item.type'=="FOLDER", 'item.displayName', \
    !isnull('violationDetails.topAffectedFiles{}.path'), 'violationDetails.topAffectedFiles{}.path', \
    !isnull('violationDetails.topAffectedFolders{}.path'), 'violationDetails.topAffectedFolders{}.path' \
)

# [ ] DLP       object_category - The category of the affected object.
EVAL-object_category = case( \
    'item.type'=="FILE", "file", \
    'item.type'=="FOLDER", 'folder' \
)

# [ ] DLP       object_path - The path of the affected object.
EVAL-object_path = case(\
    'item.type'=="FILE" OR 'item.type'=="FOLDER", 'item.displayName', \
    !isnull('violationDetails.topAffectedFiles{}.path'), 'violationDetails.topAffectedFiles{}.path', \
    !isnull('violationDetails.topAffectedFolders{}.path'), 'violationDetails.topAffectedFolders{}.path' \
)

# [ ] MALWARE   sender - The reported sender of an email-based attack

# [X] DLP       severity - The severity of the DLP event.
# [X] ALERT     severity - The severity of the network protection event. (critical, high, medium, low, informational)
# [ ] DLP       severity - The severity of the DLP event.
EVAL-severity = case(\
    severity<=2, "informational", \
    severity>=3 AND severity<=4, "low", \
    severity>=5 AND severity<=6, "medium", \
    severity>=7 AND severity<=8, "high", \
    severity>=9, "critical" \
)

# [ ] DLP       severity_id - The numeric or vendor specific severity indicator corresponding to the event severity.
FIELDALIAS-severity_id = severity AS severity_id

# [ ] DLP       signature_id - The unique identifier or event code of the event signature.
# [X] ALERT     signature - The name of the intrusion detected on the client (PlugAndPlay_BO and JavaScript_Obfuscation_Fre)
# [X] MALWARE   signature - The name of the malware infection detected on the client (Trojan.Vundo, Spyware.Gaobot, W32.Nimbda)
# [X] DLP       signature - The name of the DLP event.
EVAL-signature = lower('item.type') + " " + replace(lower(type), "_", " ")


# [ ] DLP       src - The source of the DLP event.

# [ ] DLP       src_user - The source user of the DLP event.

# [ ] ALERT     transport - The OSI layer 4 (transport) protocol of the intrusion, in lower case.

# [X] DLP       user - The target user of the DLP event.
# [X] ALERT     user - The user involved with the intrusion detection event.
# [X] MALWARE   user - The user involved in the malware event
EVAL-user = case(\
    !isnull('item.issueInitiator.email'),lower('item.issueInitiator.email'), \
    'item.type'=="USER", replace(mvindex(split(lower('item.displayName'),"("), -1), "\)", "") \
)

# [X] ALERT     user_name - The user name involved with the intrusion detection event.
EVAL-user_name = case( \
    !isnull('item.issueInitiator.name'), 'item.issueInitiator.name', \
    'item.type'=="USER", mvindex(split('item.displayName'," ("), 0) \
)
EVAL-user_email = case(\
    !isnull('item.issueInitiator.email'),lower('item.issueInitiator.email'), \
    'item.type'=="USER", replace(mvindex(split(lower('item.displayName'),"("), -1), "\)", "") \
)

# [X] ALERT     user_domain - The domain of the user involved with the intrusion detection event.
EVAL-user_domain = case(\
    !isnull('item.issueInitiator.email'), mvindex(split(lower('item.issueInitiator.email'),"@"),-1), \
    'item.type'=="USER", mvindex(split(replace(mvindex(split(lower('item.displayName'),"("), -1), "\)", ""),"@"), -1 ) \
)


# [X] MALWARE   url - A URL containing more information about the vulnerability
FIELDALIAS-url = webViewLink ASNEW url

# [X] DLP       vendor_product - The vendor and product name of the DLP system.
# [X] ALERT     vendor_product - The vendor and product name of the IDS or IPS system
# [X] MALWARE   vendor_product - The vendor and product name of the endpoint protection system
EVAL-vendor_product = "Egnyte Secure & Govern"
EVAL-product = "Secure & Govern"
EVAL-vendor = "Egnyte"

# [ ] MALWARE   product_version - The product version of the malware operations product.


## --------------------------------------------------------------------------------------------
## ADDITIONAL FIELDS
## --------------------------------------------------------------------------------------------

FIELDALIAS-event_id = sourceId ASNEW event_id
